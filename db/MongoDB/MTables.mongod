base de datos de mongo

// Colección Countries
db.createCollection("countries");
// { "name": "Spain" }

// Colección Roles
db.createCollection("roles");
db.roles.insertMany([
  { "name": "Anonymous" },
  { "name": "User" },
  { "name": "Administrator" },
  { "name": "SuperAdmin" }
]);

// Colección Permissions
db.createCollection("permissions");
// { "name": "create_post", "description": "Permite crear publicaciones" }

// Colección RolePermissions (relación)
db.createCollection("rolePermissions");
// { "role_id": 1, "permission_id": 1 }

// Colección Users
db.createCollection("users");

// Eliminar índices previos si existen para evitar conflicto
try { db.users.dropIndex("username_1"); } catch (e) {}
try { db.users.dropIndex("email_1"); } catch (e) {}

// Índice único para username
db.users.createIndex(
  { "username": 1 },
  {
    name: "username_unique_filtered",
    unique: true,
    partialFilterExpression: {
      "username": { $exists: true, $type: "string" }
    }
  }
);

// Índice único para email
db.users.createIndex(
  { "email": 1 },
  { name: "email_unique", unique: true }
);

// { "create_date": ISODate(), "first_name": "Juan", ... }

// Colección ContestTypes
db.createCollection("contestTypes");
// { "name": "Olimpiada" }

// Colección ContestNames
db.createCollection("contestNames");
try { db.contestNames.dropIndex("name_1"); } catch (e) {}
db.contestNames.createIndex({ "name": 1 }, { name: "contestName_unique", unique: true });
// { "name": "Olimpiada Matemática Española", "short_name": "OME", "contest_type_id": 1 }

// Colección Contests
db.createCollection("contests");
// { "contest_name_id": 1, "year_made": 2025 }

// Colección ActionTypes
db.createCollection("actionTypes");
// { "name": "publication" }

// Colección Actions
db.createCollection("actions");
// { "user_id": ObjectId(), "create_date": ISODate(), "action_type_id": 1 }

// Colección PublicationTypes
db.createCollection("publicationTypes");
// { "name": "problem" }

// Colección Publications
db.createCollection("publications");
// { "action_id": ObjectId(), "publication_text": "...", "publication_type_id": 1 }

// Colección EntityTypes
db.createCollection("entityTypes");
// { "name": "Problem" }

// Colección Entities
db.createCollection("entities");
// { "publication_id": ObjectId(), "name": "...", "country_id": 1, "entity_type_id": 1 }

// Colección Problems
db.createCollection("problems");
try { db.problems.dropIndex("entity_id_1"); } catch (e) {}
db.problems.createIndex({ "entity_id": 1 }, { name: "entity_id_unique", unique: true });
// { "contest_id": ObjectId(), "entity_id": ObjectId(), "difficulty": 7, "points": 100, "verified": false }

// Colección EntranceTypes
db.createCollection("entranceTypes");
// { "name": "invite_only" }

// Colección Clubs
db.createCollection("clubs");
try { db.clubs.dropIndex("entity_id_1"); } catch (e) {}
db.clubs.createIndex({ "entity_id": 1 }, { name: "club_entity_id_unique", unique: true });
// { "entity_id": ObjectId(), "club_picture_url": "...", "visibility": true, "people_limit": 50, "entrance_type_id": 1 }

// Colección NewTypes
db.createCollection("newTypes");
// { "name": "Page" }

// Colección News
db.createCollection("news");
try { db.news.dropIndex("entity_id_1"); } catch (e) {}
db.news.createIndex({ "entity_id": 1 }, { name: "news_entity_id_unique", unique: true });
// { "entity_id": ObjectId(), "new_type_id": 1 }

// Colección ClubMembers
db.createCollection("clubMembers");
// { "action_id": ObjectId(), "club_id": ObjectId(), "rol_id": 2 }

// Colección Comments
db.createCollection("comments");
// { "publication_id": ObjectId(), "in_publication_id": ObjectId() }

// Colección Solutions
db.createCollection("solutions");
// { "publication_id": ObjectId(), "problem_id": ObjectId(), "final_answer": "x = 5", "solution_type": false }

// Colección FeedbackTypes
db.createCollection("feedbackTypes");
// { "name": "reaction" }

// Colección Feedbacks
db.createCollection("feedbacks");
// { "action_id": ObjectId(), "problem_id": ObjectId(), "feedback_type_id": 1 }

// Colección Reactions
db.createCollection("reactions");
// { "feedback_id": ObjectId(), "liked": true }

// Colección CommunityDifficulty
db.createCollection("communityDifficulty");
// { "feedback_id": ObjectId(), "score": 8 }

// Validación: password mínimo 8 caracteres
db.runCommand({
  collMod: "users",
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["username", "email", "password", "role_id"],
      properties: {
        username: { bsonType: "string", minLength: 1 },
        email: { bsonType: "string" },
        password: { bsonType: "string", minLength: 8 },
        role_id: { bsonType: "int" },
        reputation: { bsonType: "int", minimum: 0 }
      }
    }
  }
});

// Validación: difficulty entre 0 y 10
db.runCommand({
  collMod: "problems",
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["entity_id", "points", "verified"],
      properties: {
        difficulty: { bsonType: "int", minimum: 0, maximum: 10 },
        points: { bsonType: "int", minimum: 0 },
        verified: { bsonType: "bool" }
      }
    }
  }
});

// Validación: score entre 0 y 10
db.runCommand({
  collMod: "communityDifficulty",
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["score"],
      properties: {
        score: { bsonType: "int", minimum: 0, maximum: 10 }
      }
    }
  }
});
